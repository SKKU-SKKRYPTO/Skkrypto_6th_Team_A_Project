{"ast":null,"code":"'use strict';\n/* eslint-env browser */\n\nconst toIterator = require('pull-stream-to-async-iterator');\n\nconst _require = require('buffer'),\n      Buffer = _require.Buffer;\n\nconst blobToAsyncIterable = require('../lib/blob-to-async-iterable');\n/*\nTransform one of:\n\nBuffer|ArrayBuffer|TypedArray\nBlob|File\nIterable<Number>\nAsyncIterable<Buffer>\nPullStream<Buffer>\n\nInto:\n\nAsyncIterable<Buffer>\n*/\n\n\nmodule.exports = function toAsyncIterable(input) {\n  // Buffer|ArrayBuffer|TypedArray|array of bytes\n  if (input[Symbol.iterator]) {\n    const buf = Buffer.from(input);\n    return Object.assign(async function* () {\n      yield buf;\n    }(), // eslint-disable-line require-await\n    {\n      length: buf.length\n    });\n  } // Blob|File\n\n\n  if (typeof Blob !== 'undefined' && input instanceof Blob) {\n    return Object.assign(blobToAsyncIterable(input), {\n      length: input.size\n    });\n  } // AsyncIterable<Buffer>\n\n\n  if (input[Symbol.asyncIterator]) {\n    return async function* () {\n      for await (const chunk of input) {\n        yield Buffer.from(chunk);\n      }\n    }();\n  } // PullStream\n\n\n  if (typeof input === 'function') {\n    return toIterator(input);\n  }\n\n  throw new Error('Unexpected input: ' + typeof input);\n};","map":null,"metadata":{},"sourceType":"script"}