{"ast":null,"code":"'use strict';\n\nconst explain = require('explain-error');\n\nexports.fetch = require('node-fetch'); // Ensure fetch response is ok (200)\n// and if not, attempt to JSON parse body, extract error message and throw\n\nexports.ok = async res => {\n  res = await res;\n\n  if (!res.ok) {\n    const _res = res,\n          status = _res.status;\n    const defaultMsg = \"unexpected status \".concat(status);\n    let msg;\n\n    try {\n      let data = await res.text();\n\n      try {\n        data = JSON.parse(data);\n        msg = data.message || data.Message;\n      } catch (err) {\n        msg = data;\n      }\n    } catch (err) {\n      throw Object.assign(explain(err, defaultMsg), {\n        status\n      });\n    }\n\n    throw Object.assign(new Error(msg || defaultMsg), {\n      status\n    });\n  }\n\n  return res;\n};\n\nexports.toIterable = body => {\n  if (body[Symbol.asyncIterator]) return body;\n\n  if (body.getReader) {\n    return async function* () {\n      const reader = body.getReader();\n\n      try {\n        while (true) {\n          const _ref = await reader.read(),\n                done = _ref.done,\n                value = _ref.value;\n\n          if (done) return;\n          yield value;\n        }\n      } finally {\n        reader.releaseLock();\n      }\n    }();\n  }\n\n  throw new Error('unknown stream');\n};","map":null,"metadata":{},"sourceType":"script"}