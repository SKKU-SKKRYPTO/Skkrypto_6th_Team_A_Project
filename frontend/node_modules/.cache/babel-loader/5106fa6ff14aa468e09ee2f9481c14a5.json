{"ast":null,"code":"'use strict';\n/* eslint-env browser */\n\nconst normaliseInput = require('./normalise-input');\n\nexports.toFormData = async input => {\n  const files = normaliseInput(input);\n  const formData = new FormData();\n  let i = 0;\n\n  for await (const file of files) {\n    if (file.content) {\n      // In the browser there's _currently_ no streaming upload, buffer up our\n      // async iterator chunks and append a big Blob :(\n      // One day, this will be browser streams\n      const bufs = [];\n\n      for await (const chunk of file.content) {\n        bufs.push(Buffer.isBuffer(chunk) ? chunk.buffer : chunk);\n      }\n\n      formData.append(\"file-\".concat(i), new Blob(bufs, {\n        type: 'application/octet-stream'\n      }), file.path);\n    } else {\n      formData.append(\"dir-\".concat(i), new Blob([], {\n        type: 'application/x-directory'\n      }), file.path);\n    }\n\n    i++;\n  }\n\n  return formData;\n};","map":null,"metadata":{},"sourceType":"script"}