{"ast":null,"code":"'use strict';\n\nconst ndjson = require('iterable-ndjson');\n\nconst _require = require('../lib/querystring'),\n      objectToQuery = _require.objectToQuery;\n\nconst configure = require('../lib/configure');\n\nconst _require2 = require('../lib/fetch'),\n      ok = _require2.ok,\n      toIterable = _require2.toIterable;\n\nconst _require3 = require('./form-data'),\n      toFormData = _require3.toFormData;\n\nconst toCamel = require('../lib/to-camel');\n\nmodule.exports = configure(({\n  fetch,\n  apiUrl,\n  apiPath,\n  headers\n}) => {\n  return (input, options) => async function* () {\n    options = options || {};\n    const qs = objectToQuery({\n      'stream-channels': true,\n      chunker: options.chunker,\n      'cid-version': options.cidVersion,\n      'cid-base': options.cidBase,\n      'enable-sharding-experiment': options.enableShardingExperiment,\n      hash: options.hashAlg,\n      'only-hash': options.onlyHash,\n      pin: options.pin,\n      progress: options.progress ? true : null,\n      quiet: options.quiet,\n      quieter: options.quieter,\n      'raw-leaves': options.rawLeaves,\n      'shard-split-threshold': options.shardSplitThreshold,\n      silent: options.silent,\n      trickle: options.trickle,\n      'wrap-with-directory': options.wrapWithDirectory,\n      ...(options.qs || {})\n    });\n    const url = \"\".concat(apiUrl).concat(apiPath, \"/add\").concat(qs);\n    const res = await ok(fetch(url, {\n      method: 'POST',\n      signal: options.signal,\n      headers: options.headers || headers,\n      body: await toFormData(input)\n    }));\n\n    for await (let file of ndjson(toIterable(res.body))) {\n      file = toCamel(file); // console.log(file)\n\n      if (options.progress && file.bytes) {\n        options.progress(file.bytes);\n      } else {\n        yield toCamel(file);\n      }\n    }\n  }();\n});","map":null,"metadata":{},"sourceType":"script"}