{"ast":null,"code":"'use strict';\n\nconst callbackify = require('./lib/callbackify');\n\nconst _require = require('./lib/iterable'),\n      collectify = _require.collectify,\n      pullify = _require.pullify,\n      concatify = _require.concatify;\n\nmodule.exports = config => {\n  const add = require('./add')(config);\n\n  const cat = require('./cat')(config);\n\n  const ls = require('./ls')(config);\n\n  const ping = require('./ping')(config);\n\n  return {\n    add: callbackify(collectify(add), {\n      minArgs: 1\n    }),\n    addPullStream: pullify.transform(add),\n    addFromStream: callbackify(collectify(add), {\n      minArgs: 1\n    }),\n    addFromURL: callbackify(collectify(require('./add-from-url')(config))),\n    bitswap: {\n      stat: callbackify(require('./bitswap/stat')(config)),\n      wantlist: callbackify(require('./bitswap/wantlist')(config))\n    },\n    block: {\n      get: callbackify(require('./block/get')(config)),\n      put: callbackify(require('./block/put')(config)),\n      stat: callbackify(require('./block/stat')(config))\n    },\n    cat: callbackify(concatify(cat)),\n    catPullStream: pullify.source(cat),\n    files: {\n      cp: callbackify(require('./files/cp')(config)),\n      mkdir: callbackify(require('./files/mkdir')(config)),\n      write: callbackify(require('./files/write')(config))\n    },\n    ls: callbackify(collectify(ls)),\n    lsPullStream: pullify.source(ls),\n    id: callbackify(require('./id')(config)),\n    ping: callbackify(collectify(ping)),\n    pingPullStream: pullify.source(ping),\n    pubsub: {\n      ls: callbackify(require('./pubsub/ls')(config)),\n      peers: callbackify(require('./pubsub/peers')(config)),\n      publish: callbackify(require('./pubsub/publish')(config)),\n      subscribe: callbackify(require('./pubsub/subscribe')(config), {\n        minArgs: 2\n      }),\n      unsubscribe: callbackify(require('./pubsub/unsubscribe')(config), {\n        minArgs: 2\n      })\n    },\n    swarm: {\n      connect: callbackify(require('./swarm/connect')(config)),\n      peers: callbackify(require('./swarm/peers')(config))\n    },\n    version: callbackify(require('./version')(config))\n  };\n};","map":null,"metadata":{},"sourceType":"script"}